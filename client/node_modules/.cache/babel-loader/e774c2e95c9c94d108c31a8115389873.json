{"ast":null,"code":"var _jsxFileName = \"/Users/amaro/Dropbox (Personal)/My Mac (Amaro\\u2019s MacBook Pro)/Desktop/developer/meme-map/client/src/hoc/Form.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport MyNotification from '../utils/MyNotification';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Form({\n  getFormButton,\n  onSubmit,\n  children,\n  ...props\n}) {\n  _s();\n\n  const [{\n    err,\n    isLoading\n  }, setStatus] = useState({});\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    if (isLoading) return;\n    const form = e.target;\n    const isValid = form.checkValidity();\n    if (!isValid) return !form.classList.contains('submitted') && form.classList.add('submitted');\n    const formData = new FormData(form);\n    const values = {};\n\n    for (let name of formData.keys()) values[name] = e.target[name].value;\n\n    setStatus({\n      isLoading: true\n    });\n    onSubmit && onSubmit({\n      values,\n      onSuccess: message => {\n        if (message) MyNotification.success(message);\n        setStatus({});\n      },\n      onFailure: err => {\n        MyNotification.danger(err.response.data.message);\n        setStatus({});\n      },\n      formData\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onFormSubmit,\n    ...props,\n    noValidate: \"novalidate\",\n    children: [children, err && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-danger m-0\",\n      children: err.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this), getFormButton && getFormButton(isLoading)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Form, \"jy+rQ/VF0ym/T3ef1hGf4SsU4VQ=\");\n\n_c = Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/amaro/Dropbox (Personal)/My Mac (Amaroâ€™s MacBook Pro)/Desktop/developer/meme-map/client/src/hoc/Form.jsx"],"names":["useState","MyNotification","Form","getFormButton","onSubmit","children","props","err","isLoading","setStatus","onFormSubmit","e","preventDefault","form","target","isValid","checkValidity","classList","contains","add","formData","FormData","values","name","keys","value","onSuccess","message","success","onFailure","danger","response","data"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;;AAEA,eAAe,SAASC,IAAT,CAAc;AAAEC,EAAAA,aAAF;AAAiBC,EAAAA,QAAjB;AAA2BC,EAAAA,QAA3B;AAAqC,KAAGC;AAAxC,CAAd,EAA+D;AAAA;;AAC7E,QAAM,CAAC;AAAEC,IAAAA,GAAF;AAAOC,IAAAA;AAAP,GAAD,EAAqBC,SAArB,IAAkCT,QAAQ,CAAC,EAAD,CAAhD;;AAEA,QAAMU,YAAY,GAAIC,CAAD,IAAO;AAC3BA,IAAAA,CAAC,CAACC,cAAF;AAEA,QAAIJ,SAAJ,EAAe;AACf,UAAMK,IAAI,GAAGF,CAAC,CAACG,MAAf;AAEA,UAAMC,OAAO,GAAGF,IAAI,CAACG,aAAL,EAAhB;AAEA,QAAI,CAACD,OAAL,EACC,OACC,CAACF,IAAI,CAACI,SAAL,CAAeC,QAAf,CAAwB,WAAxB,CAAD,IAAyCL,IAAI,CAACI,SAAL,CAAeE,GAAf,CAAmB,WAAnB,CAD1C;AAID,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,CAAaR,IAAb,CAAjB;AACA,UAAMS,MAAM,GAAG,EAAf;;AAEA,SAAK,IAAIC,IAAT,IAAiBH,QAAQ,CAACI,IAAT,EAAjB,EAAkCF,MAAM,CAACC,IAAD,CAAN,GAAeZ,CAAC,CAACG,MAAF,CAASS,IAAT,EAAeE,KAA9B;;AAElChB,IAAAA,SAAS,CAAC;AAAED,MAAAA,SAAS,EAAE;AAAb,KAAD,CAAT;AAEAJ,IAAAA,QAAQ,IACPA,QAAQ,CAAC;AACRkB,MAAAA,MADQ;AAERI,MAAAA,SAAS,EAAGC,OAAD,IAAa;AACvB,YAAIA,OAAJ,EAAa1B,cAAc,CAAC2B,OAAf,CAAuBD,OAAvB;AACblB,QAAAA,SAAS,CAAC,EAAD,CAAT;AACA,OALO;AAMRoB,MAAAA,SAAS,EAAGtB,GAAD,IAAS;AACnBN,QAAAA,cAAc,CAAC6B,MAAf,CAAsBvB,GAAG,CAACwB,QAAJ,CAAaC,IAAb,CAAkBL,OAAxC;AACAlB,QAAAA,SAAS,CAAC,EAAD,CAAT;AACA,OATO;AAURW,MAAAA;AAVQ,KAAD,CADT;AAaA,GAjCD;;AAmCA,sBACC;AAAM,IAAA,QAAQ,EAAEV,YAAhB;AAAA,OAAkCJ,KAAlC;AAAyC,IAAA,UAAU,EAAC,YAApD;AAAA,eACED,QADF,EAEEE,GAAG,iBAAI;AAAG,MAAA,SAAS,EAAC,iBAAb;AAAA,gBAAgCA,GAAG,CAACoB;AAApC;AAAA;AAAA;AAAA;AAAA,YAFT,EAGExB,aAAa,IAAIA,aAAa,CAACK,SAAD,CAHhC;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAOA;;GA7CuBN,I;;KAAAA,I","sourcesContent":["import { useState } from 'react';\nimport MyNotification from '../utils/MyNotification';\n\nexport default function Form({ getFormButton, onSubmit, children, ...props }) {\n\tconst [{ err, isLoading }, setStatus] = useState({});\n\n\tconst onFormSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\tif (isLoading) return;\n\t\tconst form = e.target;\n\n\t\tconst isValid = form.checkValidity();\n\n\t\tif (!isValid)\n\t\t\treturn (\n\t\t\t\t!form.classList.contains('submitted') && form.classList.add('submitted')\n\t\t\t);\n\n\t\tconst formData = new FormData(form);\n\t\tconst values = {};\n\n\t\tfor (let name of formData.keys()) values[name] = e.target[name].value;\n\n\t\tsetStatus({ isLoading: true });\n\n\t\tonSubmit &&\n\t\t\tonSubmit({\n\t\t\t\tvalues,\n\t\t\t\tonSuccess: (message) => {\n\t\t\t\t\tif (message) MyNotification.success(message);\n\t\t\t\t\tsetStatus({});\n\t\t\t\t},\n\t\t\t\tonFailure: (err) => {\n\t\t\t\t\tMyNotification.danger(err.response.data.message);\n\t\t\t\t\tsetStatus({});\n\t\t\t\t},\n\t\t\t\tformData,\n\t\t\t});\n\t};\n\n\treturn (\n\t\t<form onSubmit={onFormSubmit} {...props} noValidate='novalidate'>\n\t\t\t{children}\n\t\t\t{err && <p className='text-danger m-0'>{err.message}</p>}\n\t\t\t{getFormButton && getFormButton(isLoading)}\n\t\t</form>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}